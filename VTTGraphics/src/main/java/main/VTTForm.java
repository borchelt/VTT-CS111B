/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import card.AbilityCard;
import card.Card;
import card.ItemCard;
import card.SpellCard;
import card.WeaponCard;
import diceClassFinal.*;
import characterFinal.Character5E;
import java.util.ArrayList;
import java.util.HashMap;
/**
 *
 * @author Wolfgang Borchelt
 */
public class VTTForm extends javax.swing.JFrame {

   boolean rollWAdvantage = false;
   boolean isD100 = false;
   String userName;
   ArrayList<Character5E> storedChara = new ArrayList<Character5E>();
   ArrayList<Card> jonDeck = new ArrayList<Card>();
   Card testCard = new Card();
   WeaponCard sword = new WeaponCard(1, 8, 3, false, "sword", "a nice longSword, built for the arena", 5);
   SpellCard fireball = new SpellCard(8, 6, 0, false,"Fireball", "a powerful pyromancy spell", 60, "15 ft Sphere");
   HashMap<String, Integer> manipulationMap = new HashMap<String, Integer>();
   AbilityCard rebuke = new AbilityCard(2, 6, 0, false, "Hellish Rebuke", "your pain fuels a spell that \n lashes out at the attacker, \n causing them to be burned \n by hellfire.");
   
   Character5E joe = new Character5E();
   Character5E selectedChara;
   HashMap<Character5E, Integer> encounterCharas = new HashMap<Character5E, Integer>();
   int cardDisplayRange = 0;
   Character5E hoveredChar;
   Character5E target;
   ArrayList<Character5E> targetList = new ArrayList<Character5E>();



    /**
     * Creates new form VTTForm
     */
    public VTTForm() {
        manipulationMap.put("AC", 3);
        ItemCard shield = new ItemCard("Shield", "a small buckler", manipulationMap);
        jonDeck.add(testCard);
        jonDeck.add(sword);
        jonDeck.add(fireball);
        jonDeck.add(shield);
        jonDeck.add(rebuke);
        Character5E jon = new Character5E("jon", 3, "fighter", "elf", 10, 14, 18, 10, 10, 10, 30, false, 20, 20, 0, 18, 4, 30, jonDeck);
        storedChara.add(joe);
        storedChara.add(jon);
        selectedChara = storedChara.get(0);
        userName = "admin";
        

        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        sidebar = new javax.swing.JTabbedPane();
        jScrollPane6 = new javax.swing.JScrollPane();
        chatLog = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        String[] strings = {"test1", "test2", "test3"};
        jList4 = new javax.swing.JList<>();
        jScrollPane8 = new javax.swing.JScrollPane();
        inti = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        characterWindow = new javax.swing.JTextArea();
        choice1 = new java.awt.Choice();
        jButton8 = new javax.swing.JButton();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane9 = new javax.swing.JScrollPane();
        jLabel2 = new javax.swing.JLabel();
        jDesktopPane3 = new javax.swing.JDesktopPane();
        jScrollPane10 = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jDesktopPane4 = new javax.swing.JDesktopPane();
        jScrollPane11 = new javax.swing.JScrollPane();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane5 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        fullCard1 = new javax.swing.JInternalFrame();
        cardButton1 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        card1 = new javax.swing.JTextArea();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        choice2 = new java.awt.Choice();
        jLabel4 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        fullCard2 = new javax.swing.JInternalFrame();
        cardButton2 = new javax.swing.JButton();
        jScrollPane12 = new javax.swing.JScrollPane();
        card2 = new javax.swing.JTextArea();
        fullCard3 = new javax.swing.JInternalFrame();
        cardButton3 = new javax.swing.JButton();
        jScrollPane13 = new javax.swing.JScrollPane();
        card3 = new javax.swing.JTextArea();
        fullCard4 = new javax.swing.JInternalFrame();
        cardButton5 = new javax.swing.JButton();
        jScrollPane15 = new javax.swing.JScrollPane();
        card5 = new javax.swing.JTextArea();
        jScrollPane16 = new javax.swing.JScrollPane();
        targetListDisplay = new javax.swing.JTextArea();
        clear = new javax.swing.JButton();
        typeBox = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jButton1.setIcon(new javax.swing.ImageIcon("twenty.png"));
        jButton1.setText("d20");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon("twelve.png"));
        jButton2.setText("d12");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon("ten.png"));
        jButton3.setText("d10");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon("eight.png"));
        jButton4.setText("d8");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon("six.png"));
        jButton5.setText("d6");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon("four.png"));
        jButton6.setText("d4");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jRadioButton1.setText("Advantage");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("d100");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jSplitPane1.setDividerLocation(920);

        chatLog.setEditable(false);
        chatLog.setColumns(20);
        chatLog.setRows(5);
        jScrollPane6.setViewportView(chatLog);

        sidebar.addTab("Chat", jScrollPane6);

        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList2);

        sidebar.addTab("Music", jScrollPane2);

        jList3.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList3);

        sidebar.addTab("Maps", jScrollPane3);

        jList4.setModel(new javax.swing.AbstractListModel<String>() {

            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(jList4);

        sidebar.addTab("Cards", jScrollPane4);

        inti.setModel(new javax.swing.AbstractListModel<String>() {
            public int getSize() { return encounterCharas.size(); }
            public String getElementAt(int i)
            {
                ArrayList<Character5E> tempCharas = new ArrayList<>();
                encounterCharas.forEach((k, v) -> {
                    tempCharas.add(k);
                });

                return tempCharas.get(i).getName();

            }
        });
        inti.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                intiValueChanged(evt);
            }
        });
        jScrollPane8.setViewportView(inti);

        sidebar.addTab("initiative", jScrollPane8);

        characterWindow.setColumns(20);
        characterWindow.setRows(5);
        jScrollPane1.setViewportView(characterWindow);
        characterWindow.setText(selectedChara.toString());

        for(Character5E chara: storedChara)
        choice1.add(chara.getName());
        choice1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                choice1ItemStateChanged(evt);
            }
        });

        jButton8.setText("add to encounter");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton8)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(choice1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(63, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(choice1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton8))
        );

        sidebar.addTab("Characters", jPanel2);

        jSplitPane1.setRightComponent(sidebar);

        jDesktopPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel2.setIcon(new javax.swing.ImageIcon("maps\\MAP_Desert.png"));
        jScrollPane9.setViewportView(jLabel2);

        jDesktopPane1.setLayer(jScrollPane9, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 907, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane3.addTab("map 1", jDesktopPane1);

        jLabel1.setIcon(new javax.swing.ImageIcon("maps\\MAP_DireDesert.png"));
        jScrollPane10.setViewportView(jLabel1);

        jDesktopPane3.setLayer(jScrollPane10, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane3Layout = new javax.swing.GroupLayout(jDesktopPane3);
        jDesktopPane3.setLayout(jDesktopPane3Layout);
        jDesktopPane3Layout.setHorizontalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 907, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane3Layout.setVerticalGroup(
            jDesktopPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane3.addTab("map 2", jDesktopPane3);

        jLabel3.setIcon(new javax.swing.ImageIcon("maps\\MAP_TimeRoom.png"));
        jScrollPane11.setViewportView(jLabel3);

        jDesktopPane4.setLayer(jScrollPane11, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane4Layout = new javax.swing.GroupLayout(jDesktopPane4);
        jDesktopPane4.setLayout(jDesktopPane4Layout);
        jDesktopPane4Layout.setHorizontalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 907, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane4Layout.setVerticalGroup(
            jDesktopPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane3.addTab("map 3", jDesktopPane4);

        jSplitPane1.setLeftComponent(jTabbedPane3);

        fullCard1.setMaximumSize(new java.awt.Dimension(206, 260));
        fullCard1.setMinimumSize(new java.awt.Dimension(206, 260));
        fullCard1.setPreferredSize(new java.awt.Dimension(206, 260));
        fullCard1.setVisible(true);

        cardButton1.setText("Use");
        cardButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardButton1ActionPerformed(evt);
            }
        });

        card1.setEditable(false);
        card1.setColumns(10);
        card1.setRows(5);
        //if(hoveredChar == null){
            card1.setText("test card\n");
            //}
        //else if(hoveredChar.getDeck() == null){
            //card1.setText("no cards\n");
            //}
        //else if(hoveredChar.getDeck().get(cardDisplayRange) != null)
        //{
            //card1.setText(hoveredChar.getDeck().get(cardDisplayRange).toString());

            //}
        //else
        //{
            //    card1.setText("no card\n");
            //}
        card1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                card1InputMethodTextChanged(evt);
            }
        });
        card1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                card1PropertyChange(evt);
            }
        });
        jScrollPane7.setViewportView(card1);

        javax.swing.GroupLayout fullCard1Layout = new javax.swing.GroupLayout(fullCard1.getContentPane());
        fullCard1.getContentPane().setLayout(fullCard1Layout);
        fullCard1Layout.setHorizontalGroup(
            fullCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fullCard1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cardButton1)
                .addContainerGap(137, Short.MAX_VALUE))
            .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
        );
        fullCard1Layout.setVerticalGroup(
            fullCard1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fullCard1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cardButton1)
                .addContainerGap())
        );

        jButton13.setIcon(new javax.swing.ImageIcon("left.png"));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jButton14.setIcon(new javax.swing.ImageIcon("right.png"));
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        encounterCharas.forEach((k, v) -> {
            choice1.add(k.getName());
        });
        choice2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                choice2ItemStateChanged(evt);
            }
        });

        jLabel4.setText("Target");

        jButton9.setText("add to list");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        fullCard2.setMaximumSize(new java.awt.Dimension(206, 260));
        fullCard2.setMinimumSize(new java.awt.Dimension(206, 260));
        fullCard2.setPreferredSize(new java.awt.Dimension(206, 260));
        fullCard2.setVisible(true);

        cardButton2.setText("Use");
        cardButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardButton2ActionPerformed(evt);
            }
        });

        card2.setEditable(false);
        card2.setColumns(10);
        card2.setRows(5);
        card2.setText("test card\n");
        //}
    //else if(hoveredChar.getDeck() == null){
        //card1.setText("no cards\n");
        //}
    //else if(hoveredChar.getDeck().get(cardDisplayRange) != null)
    //{
        //card1.setText(hoveredChar.getDeck().get(cardDisplayRange).toString());

        //}
    //else
    //{
        //    card1.setText("no card\n");
        //}
    card2.addInputMethodListener(new java.awt.event.InputMethodListener() {
        public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
        }
        public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            card2InputMethodTextChanged(evt);
        }
    });
    card2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
        public void propertyChange(java.beans.PropertyChangeEvent evt) {
            card2PropertyChange(evt);
        }
    });
    jScrollPane12.setViewportView(card2);

    javax.swing.GroupLayout fullCard2Layout = new javax.swing.GroupLayout(fullCard2.getContentPane());
    fullCard2.getContentPane().setLayout(fullCard2Layout);
    fullCard2Layout.setHorizontalGroup(
        fullCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(fullCard2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(cardButton2)
            .addContainerGap(137, Short.MAX_VALUE))
        .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
    );
    fullCard2Layout.setVerticalGroup(
        fullCard2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fullCard2Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(cardButton2)
            .addContainerGap())
    );

    fullCard3.setMaximumSize(new java.awt.Dimension(206, 260));
    fullCard3.setMinimumSize(new java.awt.Dimension(206, 260));
    fullCard3.setPreferredSize(new java.awt.Dimension(206, 260));
    fullCard3.setVisible(true);

    cardButton3.setText("Use");
    cardButton3.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cardButton3ActionPerformed(evt);
        }
    });

    card3.setEditable(false);
    card3.setColumns(10);
    card3.setRows(5);
    card3.setText("test card\n");
    //}
    //else if(hoveredChar.getDeck() == null){
        //card1.setText("no cards\n");
        //}
    //else if(hoveredChar.getDeck().get(cardDisplayRange) != null)
    //{
        //card1.setText(hoveredChar.getDeck().get(cardDisplayRange).toString());

        //}
    //else
    //{
        //    card1.setText("no card\n");
        //}
    card3.addInputMethodListener(new java.awt.event.InputMethodListener() {
        public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
        }
        public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            card3InputMethodTextChanged(evt);
        }
    });
    card3.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
        public void propertyChange(java.beans.PropertyChangeEvent evt) {
            card3PropertyChange(evt);
        }
    });
    jScrollPane13.setViewportView(card3);

    javax.swing.GroupLayout fullCard3Layout = new javax.swing.GroupLayout(fullCard3.getContentPane());
    fullCard3.getContentPane().setLayout(fullCard3Layout);
    fullCard3Layout.setHorizontalGroup(
        fullCard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(fullCard3Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(cardButton3)
            .addContainerGap(137, Short.MAX_VALUE))
        .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
    );
    fullCard3Layout.setVerticalGroup(
        fullCard3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fullCard3Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane13, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(cardButton3)
            .addContainerGap())
    );

    fullCard4.setMaximumSize(new java.awt.Dimension(206, 260));
    fullCard4.setMinimumSize(new java.awt.Dimension(206, 260));
    fullCard4.setPreferredSize(new java.awt.Dimension(206, 260));
    fullCard4.setVisible(true);

    cardButton5.setText("Use");
    cardButton5.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cardButton5ActionPerformed(evt);
        }
    });

    card5.setEditable(false);
    card5.setColumns(10);
    card5.setRows(5);
    card5.setText("test card\n");
    //}
    //else if(hoveredChar.getDeck() == null){
        //card1.setText("no cards\n");
        //}
    //else if(hoveredChar.getDeck().get(cardDisplayRange) != null)
    //{
        //card1.setText(hoveredChar.getDeck().get(cardDisplayRange).toString());

        //}
    //else
    //{
        //    card1.setText("no card\n");
        //}
    card5.addInputMethodListener(new java.awt.event.InputMethodListener() {
        public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
        }
        public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            card5InputMethodTextChanged(evt);
        }
    });
    card5.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
        public void propertyChange(java.beans.PropertyChangeEvent evt) {
            card5PropertyChange(evt);
        }
    });
    jScrollPane15.setViewportView(card5);

    javax.swing.GroupLayout fullCard4Layout = new javax.swing.GroupLayout(fullCard4.getContentPane());
    fullCard4.getContentPane().setLayout(fullCard4Layout);
    fullCard4Layout.setHorizontalGroup(
        fullCard4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(fullCard4Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(cardButton5)
            .addContainerGap(137, Short.MAX_VALUE))
        .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
    );
    fullCard4Layout.setVerticalGroup(
        fullCard4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fullCard4Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jScrollPane15, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(cardButton5)
            .addContainerGap())
    );

    targetListDisplay.setColumns(10);
    targetListDisplay.setRows(5);
    targetListDisplay.setText("List of targets: ");
    jScrollPane16.setViewportView(targetListDisplay);

    clear.setText("clear");
    clear.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            clearActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(fullCard1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(fullCard2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(fullCard3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(fullCard4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(29, 29, 29)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jLabel4)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(choice2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton9)))
            .addGap(18, 18, 18)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(clear, javax.swing.GroupLayout.Alignment.TRAILING))
            .addContainerGap(26, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(31, 31, 31)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(clear)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane16, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(fullCard4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fullCard3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fullCard2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fullCard1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel4)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(choice2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addContainerGap(24, Short.MAX_VALUE))
    );

    jScrollPane5.setViewportView(jPanel1);

    typeBox.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            typeBoxActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton4)
                        .addComponent(jButton5)
                        .addComponent(jButton2)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jRadioButton2))
                        .addComponent(jButton6)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButton1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jRadioButton1)))
                    .addGap(31, 31, 31)
                    .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jSeparator1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(typeBox, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSplitPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 511, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jRadioButton1))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jRadioButton2))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(30, 30, 30)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(typeBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        Dice d8 = new Dice(1, 8, 0, false);
        
        chatLog.append("\n" + userName + " rolled a d8: " + d8.roll());   
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Dice d20 = new Dice(1, 20, 0, rollWAdvantage);
        if(rollWAdvantage == false)
            chatLog.append("\n" + userName + " rolled a d20: " + d20.roll());
        else
            chatLog.append("\n" + userName + " rolled a d20 with advantage: " + d20.roll());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Dice d12 = new Dice(1, 12, 0, false);
        
            chatLog.append("\n" + userName + " rolled a d12: " + d12.roll());       
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        if(rollWAdvantage == false)
            rollWAdvantage = true;
        else
            rollWAdvantage = false;
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        Dice d4 = new Dice(1, 4, 0, false);
        
        chatLog.append("\n" + userName + " rolled a d4: " + d4.roll());   
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        Dice d6 = new Dice(1, 6, 0, false);
        
        chatLog.append("\n" + userName + " rolled a d6: " + d6.roll());   
    }//GEN-LAST:event_jButton5ActionPerformed

    private void cardButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardButton1ActionPerformed

        if(hoveredChar.getDeck().get(cardDisplayRange) instanceof WeaponCard && hoveredChar.getDeck().get(cardDisplayRange) instanceof SpellCard == false)
            chatLog.append(hoveredChar.weaponAttack(target, (WeaponCard) hoveredChar.getDeck().get(cardDisplayRange)));
        if(hoveredChar.getDeck().get(cardDisplayRange) instanceof SpellCard)
            chatLog.append(hoveredChar.spellAttack(targetList, (SpellCard) hoveredChar.getDeck().get(cardDisplayRange)));
        if(hoveredChar.getDeck().get(cardDisplayRange) instanceof ItemCard)
            chatLog.append(hoveredChar.equip((ItemCard) hoveredChar.getDeck().get(cardDisplayRange)));
        if(hoveredChar.getDeck().get(cardDisplayRange) instanceof AbilityCard)
            chatLog.append(hoveredChar.useAbility(targetList, (AbilityCard) hoveredChar.getDeck().get(cardDisplayRange)));
        
    }//GEN-LAST:event_cardButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        if(isD100 == false)
            isD100 = true;
        else
            isD100 = false;
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Dice d10 = new Dice(1, 10, 0, false);
        
        if(isD100 == false)
            chatLog.append("\n" + userName + " rolled a d10: " + d10.roll());
        else
            chatLog.append("\n" + userName + " rolled a d100: " + d10.roll(1, 100));
    }//GEN-LAST:event_jButton3ActionPerformed

    private void choice1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_choice1ItemStateChanged
        for(Character5E chara: storedChara)
        {
            if(choice1.getSelectedItem() == chara.getName())
                selectedChara = chara;
        }
        
        characterWindow.setText("");
        characterWindow.append(selectedChara.toString());
    }//GEN-LAST:event_choice1ItemStateChanged

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        
        choice2.addItem(selectedChara.getName());
        Dice d20 = new Dice(1, 20, selectedChara.getInti(), false);
        if(encounterCharas.isEmpty())
            target = selectedChara;
        encounterCharas.put(selectedChara, d20.roll().get(0));
        inti.updateUI();
        

    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        if(cardDisplayRange >= 4)
            cardDisplayRange -= 4;
        updateCards();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        if(hoveredChar.getDeck().size() > cardDisplayRange + 4)
            cardDisplayRange += 4;
        updateCards();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void intiValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_intiValueChanged
        
        for(Character5E chara: storedChara)
        {
            if(inti.getSelectedValue() == chara.getName())
                   hoveredChar = chara;

                
                
        }        
        
        this.updateCards();
       
        
    }//GEN-LAST:event_intiValueChanged

    private void choice2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_choice2ItemStateChanged
     for(Character5E chara: storedChara)
        {
            if(choice2.getSelectedItem() == chara.getName())
                target = chara;
        }
        
       
    }//GEN-LAST:event_choice2ItemStateChanged

    private void card1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_card1PropertyChange

    }//GEN-LAST:event_card1PropertyChange

    private void card1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_card1InputMethodTextChanged
        if(hoveredChar == null){
            card1.setText("test card\n");
        }
        else if(hoveredChar.getDeck() == null){
            card1.setText("no cards\n");
        }
        
        else if(hoveredChar.getDeck().get(cardDisplayRange) != null)
        {
            card1.setText(hoveredChar.getDeck().get(cardDisplayRange).toString());
        }
        else
        {
            card1.setText("no card\n");
        }
    }//GEN-LAST:event_card1InputMethodTextChanged

    private void cardButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardButton2ActionPerformed

        if(hoveredChar.getDeck().get(cardDisplayRange+1) instanceof WeaponCard && hoveredChar.getDeck().get(cardDisplayRange+1) instanceof SpellCard == false)
            chatLog.append(hoveredChar.weaponAttack(target, (WeaponCard) hoveredChar.getDeck().get(cardDisplayRange+1)));
        if(hoveredChar.getDeck().get(cardDisplayRange+1) instanceof SpellCard)
            chatLog.append(hoveredChar.spellAttack(targetList, (SpellCard) hoveredChar.getDeck().get(cardDisplayRange+1)));
        if(hoveredChar.getDeck().get(cardDisplayRange+1) instanceof ItemCard)
            chatLog.append(hoveredChar.equip((ItemCard) hoveredChar.getDeck().get(cardDisplayRange+1)));
        if(hoveredChar.getDeck().get(cardDisplayRange+1) instanceof AbilityCard)
            chatLog.append(hoveredChar.useAbility(targetList, (AbilityCard) hoveredChar.getDeck().get(cardDisplayRange+1)));
        
                                             
    }//GEN-LAST:event_cardButton2ActionPerformed

    private void card2InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_card2InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_card2InputMethodTextChanged

    private void card2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_card2PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_card2PropertyChange

    private void cardButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardButton3ActionPerformed
        if(hoveredChar.getDeck().get(cardDisplayRange+2) instanceof WeaponCard && hoveredChar.getDeck().get(cardDisplayRange+2) instanceof SpellCard == false)
            chatLog.append(hoveredChar.weaponAttack(target, (WeaponCard) hoveredChar.getDeck().get(cardDisplayRange+2)));
        if(hoveredChar.getDeck().get(cardDisplayRange+2) instanceof SpellCard)
            chatLog.append(hoveredChar.spellAttack(targetList, (SpellCard) hoveredChar.getDeck().get(cardDisplayRange+2)));
        if(hoveredChar.getDeck().get(cardDisplayRange+2) instanceof ItemCard)
            chatLog.append(hoveredChar.equip((ItemCard) hoveredChar.getDeck().get(cardDisplayRange+2)));
        if(hoveredChar.getDeck().get(cardDisplayRange+2) instanceof AbilityCard)
            chatLog.append(hoveredChar.useAbility(targetList, (AbilityCard) hoveredChar.getDeck().get(cardDisplayRange+2)));
        
                // TODO add your handling code here:
    }//GEN-LAST:event_cardButton3ActionPerformed

    private void card3InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_card3InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_card3InputMethodTextChanged

    private void card3PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_card3PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_card3PropertyChange

    private void cardButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardButton5ActionPerformed
        if(hoveredChar.getDeck().get(cardDisplayRange+3) instanceof WeaponCard && hoveredChar.getDeck().get(cardDisplayRange+3) instanceof SpellCard == false)
            chatLog.append(hoveredChar.weaponAttack(target, (WeaponCard) hoveredChar.getDeck().get(cardDisplayRange+3)));
        if(hoveredChar.getDeck().get(cardDisplayRange+3) instanceof SpellCard)
            chatLog.append(hoveredChar.spellAttack(targetList, (SpellCard) hoveredChar.getDeck().get(cardDisplayRange+3)));
        if(hoveredChar.getDeck().get(cardDisplayRange+3) instanceof ItemCard)
            chatLog.append(hoveredChar.equip((ItemCard) hoveredChar.getDeck().get(cardDisplayRange+3)));
        if(hoveredChar.getDeck().get(cardDisplayRange+3) instanceof AbilityCard)
            chatLog.append(hoveredChar.useAbility(targetList, (AbilityCard) hoveredChar.getDeck().get(cardDisplayRange+3)));
        
        
    }//GEN-LAST:event_cardButton5ActionPerformed

    private void card5InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_card5InputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_card5InputMethodTextChanged

    private void card5PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_card5PropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_card5PropertyChange

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        targetList.add(target);
        targetListDisplay.append("\n" + target.getName());
    }//GEN-LAST:event_jButton9ActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        targetList.clear();
        targetListDisplay.setText("List of targets: ");
    }//GEN-LAST:event_clearActionPerformed

    private void typeBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeBoxActionPerformed
        chatLog.append("\n" + userName +": " + typeBox.getText());
        typeBox.setText("");
    }//GEN-LAST:event_typeBoxActionPerformed
    
    private void updateCards()
    {
        //brute forcing for mental health
         if(hoveredChar.getDeck().isEmpty() == false)
         {
            card1.setText("no card");
            cardButton1.setVisible(false);
            card2.setText("no card");
            cardButton2.setVisible(false);
            card3.setText("no card");
            cardButton3.setVisible(false);
            card5.setText("no card");
            cardButton5.setVisible(false);
            
            if(cardDisplayRange < hoveredChar.getDeck().size())
            {
                card1.setText(hoveredChar.getDeck().get(cardDisplayRange).toString());
                cardButton1.setVisible(true);
            }
            
            if(cardDisplayRange + 1 < hoveredChar.getDeck().size())
            {
                card2.setText(hoveredChar.getDeck().get(cardDisplayRange + 1).toString());
                cardButton2.setVisible(true);
            }
            
            if(cardDisplayRange + 2 < hoveredChar.getDeck().size())
            {
                card3.setText(hoveredChar.getDeck().get(cardDisplayRange + 2).toString());
                cardButton3.setVisible(true);
            }
            
            if(cardDisplayRange + 3 < hoveredChar.getDeck().size())
            {
                card5.setText(hoveredChar.getDeck().get(cardDisplayRange + 3).toString());
                cardButton5.setVisible(true);
            }
         }
             
        else
        {
            card1.setText("no card");
            cardButton1.setVisible(false);
            card2.setText("no card");
            cardButton2.setVisible(false);
            card3.setText("no card");
            cardButton3.setVisible(false);
            card5.setText("no card");
            cardButton5.setVisible(false);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VTTForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VTTForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VTTForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VTTForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VTTForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea card1;
    private javax.swing.JTextArea card2;
    private javax.swing.JTextArea card3;
    private javax.swing.JTextArea card5;
    private javax.swing.JButton cardButton1;
    private javax.swing.JButton cardButton2;
    private javax.swing.JButton cardButton3;
    private javax.swing.JButton cardButton5;
    private javax.swing.JTextArea characterWindow;
    private javax.swing.JTextArea chatLog;
    private java.awt.Choice choice1;
    private java.awt.Choice choice2;
    private javax.swing.JButton clear;
    private javax.swing.JInternalFrame fullCard1;
    private javax.swing.JInternalFrame fullCard2;
    private javax.swing.JInternalFrame fullCard3;
    private javax.swing.JInternalFrame fullCard4;
    private javax.swing.JList<String> inti;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane3;
    private javax.swing.JDesktopPane jDesktopPane4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JList<String> jList4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane15;
    private javax.swing.JScrollPane jScrollPane16;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane sidebar;
    private javax.swing.JTextArea targetListDisplay;
    private javax.swing.JTextField typeBox;
    // End of variables declaration//GEN-END:variables
}
